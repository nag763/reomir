name: Deploy Cloud Run Front Service

on:
  push:
    branches:
      - master 
    paths:
      - 'front/**' 

env:
  # --- GCP Cloud Run Variables ---
  GCP_PROJECT_ID: reomir # Your GCP project ID
  GCP_REGION: europe-west1 # Cloud Run region
  GAR_REPOSITORY_ID: reomir # Artifact Registry repo ID
  CLOUD_RUN_SERVICE_NAME: reomir-front # Cloud Run service name
  FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}

jobs:
  deploy_cloud_run:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Required for Workload Identity Federation

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Google Auth (Workload Identity Federation)
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/gh-actions-pool/providers/github-provider
        service_account: github-actions-deployer@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com

    # This enables BuildKit, which is required for --secret
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up Docker for Artifact Registry
      run: |-
        gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

    - name: Build and push Docker image to Artifact Registry
      working-directory: ./front 
      run: |-
        # Construct the full image path
        IMAGE_URI="${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY_ID }}/${{ env.CLOUD_RUN_SERVICE_NAME }}:latest"
        
        # Build with BuildKit enabled (--secret uses the job's ENV var)
        DOCKER_BUILDKIT=1 docker build \
          --secret id=firebase_key,env=FIREBASE_SERVICE_ACCOUNT_JSON \
          -t $IMAGE_URI .
          
        # Push the image
        docker push $IMAGE_URI

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.CLOUD_RUN_SERVICE_NAME }}
        region: ${{ env.GCP_REGION }}
        image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY_ID }}/${{ env.CLOUD_RUN_SERVICE_NAME }}:latest