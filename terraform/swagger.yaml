swagger: "2.0"
info:
  title: "Reomir API Gateway"
  description: "API for the Reomir API, secured by Google ID Tokens."
  version: "v0.1.0"
schemes:
  - "https"
produces:
  - "application/json"

responses:
  UnauthorizedError:
    description: "Unauthorized - Token missing, invalid, or expired"
  ForbiddenError:
    description: "Forbidden - Token valid but user not permitted for the action"
  InternalServerError:
    description: "Internal Server Error"
  SuccessUserSelf:
    description: "Successful operation - User profile data"
    schema:
      type: object
      properties:
        # Define what your GET /users/self returns
        userId:
          type: string
          example: "google-user-id-123"
        email:
          type: string
          format: email
          example: "user@example.com"
        name:
          type: string
          example: "Jane Doe"
        cookieConsent:
          type: string
          enum: ["true", "false", null] # Or just "true" if that's the only valid consented state
          example: "true"
        organizationName:
          type: string
          example: "Innovatech Solutions"
        # Add other fields your /users/self GET endpoint returns

definitions:
  UserProfileUpdateRequest:
    type: object
    properties:
      cookieConsent:
        type: string
        enum: ["true"] # Expecting 'true' to be sent
        description: "Indicates user's consent to cookies."
        example: "true"
      organizationName:
        type: string
        description: "Name of the organization the user wants to create or is part of."
        example: "My Awesome Org"
    required:
      - cookieConsent # cookieConsent is mandatory for this update

securityDefinitions:
  google_id_token_auth:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "https://accounts.google.com"
    x-google-jwks_uri: "https://www.googleapis.com/oauth2/v3/certs"
    x-google-audiences: ${GOOGLE_OAUTH_CLIENT_ID}

paths:
  /api/v1/agent/session: 
    post:
      summary: "Performs an action in the reomir-agent"
      operationId: "acquireAgentSession"
      security:
        - google_id_token_auth: [] # Applies the 'google_id_token_auth' security to this path
      x-google-backend:
        address: "${CLOUDRUN_AGENT_URL}/apps/coordinator/users/user/sessions" # Replace with actual URL
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized - Token missing or invalid"
        "403":
          description: "Forbidden - Token valid but user not permitted"
    options: 
      summary: "CORS preflight for agent endpoint"
      operationId: "optionsAgentSession"
      x-google-backend:
        address: "${CLOUDRUN_AGENT_URL}/apps/coordinator/users/user/sessions" # Point to the same backend
      responses:
        "200":
          description: "Successful CORS preflight"
          headers: # <--- Recommended for CORS preflight
            Access-Control-Allow-Origin:
              type: "string"
              default: "*"
            Access-Control-Allow-Headers:
              type: "string"
              default: "Content-Type, Authorization"
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Max-Age:
              type: integer
  /api/v1/agent/run: 
    post:
      summary: "Performs an action in the reomir-agent"
      operationId: "performAgentAction"
      security:
        - google_id_token_auth: [] # Applies the 'google_id_token_auth' security to this path
      x-google-backend:
        address: "${CLOUDRUN_AGENT_URL}/run" # Replace with actual URL
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized - Token missing or invalid"
        "403":
          description: "Forbidden - Token valid but user not permitted"
    options: 
      summary: "CORS preflight for users endpoint"
      operationId: "optionsAgentRun"
      x-google-backend:
        address: "${CLOUDRUN_AGENT_URL}/run" # Point to the same backend
      responses:
        "200":
          description: "Successful CORS preflight"
          headers: # <--- Recommended for CORS preflight
            Access-Control-Allow-Origin:
              type: "string"
              default: "*"
            Access-Control-Allow-Headers:
              type: "string"
              default: "Content-Type, Authorization"
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Max-Age:
              type: integer
  /api/v1/users/self: # Corrected: Removed trailing slash
    get:
      summary: "Retrieves user information"
      operationId: "getUserInfo"
      security:
        - google_id_token_auth: [] # Applies the 'google_id_token_auth' security to this path
      x-google-backend:
        address: "${CLOUDFUN_USER_URL}" # Replace with actual URL
      responses:
        "200":
          description: "Successful operation"
          headers: # <--- Recommended for CORS preflight
            Access-Control-Allow-Origin:
              type: "string"
              default: "*"
            Access-Control-Allow-Headers:
              type: "string"
              default: "Content-Type, Authorization"
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Max-Age:
              type: integer
    post:
      summary: "Updates the current authenticated user's profile (e.g., consent, organization)"
      operationId: "createsCurrentUserProfile"
      security:
        - google_id_token_auth: []
      x-google-backend:
        address: "${CLOUDFUN_USER_URL}" # Variable from Terraform
        # path_translation: CONSTANT_ADDRESS
      parameters:
        - in: "body"
          name: "body"
          description: "User profile data to update."
          required: true
          schema:
            $ref: "#/definitions/UserProfileUpdateRequest"
      responses:
        "200":
          description: "Profile updated successfully"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Profile updated successfully."
              # Optionally return the updated profile, similar to SuccessUserSelf
              profile:
                $ref: "#/responses/SuccessUserSelf/schema"
        "400":
          description: "Bad Request - Invalid input data"
        "401":
          $ref: "#/responses/UnauthorizedError"
        "403":
          $ref: "#/responses/ForbiddenError"
        "500":
          $ref: "#/responses/InternalServerError"
    put:
      summary: "Updates the current authenticated user's profile (e.g., consent, organization)"
      operationId: "updateCurrentUserProfile"
      security:
        - google_id_token_auth: []
      x-google-backend:
        address: "${CLOUDFUN_USER_URL}" # Variable from Terraform
      responses:
        "200":
          description: "Profile updated successfully"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Profile updated successfully."
              # Optionally return the updated profile, similar to SuccessUserSelf
              profile:
                $ref: "#/responses/SuccessUserSelf/schema"
        "400":
          description: "Bad Request - Invalid input data"
        "401":
          $ref: "#/responses/UnauthorizedError"
        "403":
          $ref: "#/responses/ForbiddenError"
        "500":
          $ref: "#/responses/InternalServerError"
    delete:
      summary: "Delete the current authenticated user's profile"
      operationId: "deleteCurrentUserProfile"
      security:
        - google_id_token_auth: []
      x-google-backend:
        address: "${CLOUDFUN_USER_URL}" # Variable from Terraform
      responses:
        "200":
          description: "Profile deleted successfully"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Profile deleted successfully."
              # Optionally return the updated profile, similar to SuccessUserSelf
              profile:
                $ref: "#/responses/SuccessUserSelf/schema"
        "400":
          description: "Bad Request - Invalid input data"
        "401":
          $ref: "#/responses/UnauthorizedError"
        "403":
          $ref: "#/responses/ForbiddenError"
        "500":
          $ref: "#/responses/InternalServerError"
    options: 
      summary: "CORS preflight for users endpoint"
      operationId: "optionsUsers"
      # security:
      #   - google_id_token_auth: []
      x-google-backend:
        address: "${CLOUDFUN_USER_URL}" # Point to the same backend
      responses:
        "200":
          description: "Successful CORS preflight"
          headers: # <--- Recommended for CORS preflight
            Access-Control-Allow-Origin:
              type: "string"
              default: "*"
            Access-Control-Allow-Headers:
              type: "string"
              default: "Content-Type, Authorization"
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Max-Age:
              type: integer